/* tslint:disable */
/* eslint-disable */
/**
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: bbfb64a2ef9111c6610a823da800b0335587831d
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface TournamentV4TournamentCodeParameters
 */
export interface TournamentV4TournamentCodeParameters {
    /**
     * Optional list of encrypted summonerIds in order to validate the players eligible to join the lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and teamTwo. We may add the ability to enforce at the team level in the future.
     * @type {Array<string>}
     * @memberof TournamentV4TournamentCodeParameters
     */
    allowedSummonerIds?: Array<string>;
    /**
     * Optional string that may contain any data in any format, if specified at all. Used to denote any custom information about the game.
     * @type {string}
     * @memberof TournamentV4TournamentCodeParameters
     */
    metadata?: string;
    /**
     * The team size of the game. Valid values are 1-5.
     * @type {number}
     * @memberof TournamentV4TournamentCodeParameters
     */
    teamSize: number;
    /**
     * The pick type of the game.              (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT)
     * @type {string}
     * @memberof TournamentV4TournamentCodeParameters
     */
    pickType: TournamentV4TournamentCodeParametersPickTypeEnum;
    /**
     * The map type of the game.              (Legal values:  SUMMONERS_RIFT,  TWISTED_TREELINE,  HOWLING_ABYSS)
     * @type {string}
     * @memberof TournamentV4TournamentCodeParameters
     */
    mapType: TournamentV4TournamentCodeParametersMapTypeEnum;
    /**
     * The spectator type of the game.              (Legal values:  NONE,  LOBBYONLY,  ALL)
     * @type {string}
     * @memberof TournamentV4TournamentCodeParameters
     */
    spectatorType: TournamentV4TournamentCodeParametersSpectatorTypeEnum;
}

/**
 * @export
 * @enum {string}
 */
export type TournamentV4TournamentCodeParametersPickTypeEnum = 'BLIND_PICK' | 'DRAFT_MODE' | 'ALL_RANDOM' | 'TOURNAMENT_DRAFT'

/**
 * @export
 * @enum {string}
 */
export const TournamentV4TournamentCodeParametersPickTypeEnum = {
    BlindPick: 'BLIND_PICK' as TournamentV4TournamentCodeParametersPickTypeEnum,
    DraftMode: 'DRAFT_MODE' as TournamentV4TournamentCodeParametersPickTypeEnum,
    AllRandom: 'ALL_RANDOM' as TournamentV4TournamentCodeParametersPickTypeEnum,
    TournamentDraft: 'TOURNAMENT_DRAFT' as TournamentV4TournamentCodeParametersPickTypeEnum
};
/**
 * @export
 * @enum {string}
 */
export type TournamentV4TournamentCodeParametersMapTypeEnum = 'SUMMONERS_RIFT' | 'TWISTED_TREELINE' | 'HOWLING_ABYSS'

/**
 * @export
 * @enum {string}
 */
export const TournamentV4TournamentCodeParametersMapTypeEnum = {
    SummonersRift: 'SUMMONERS_RIFT' as TournamentV4TournamentCodeParametersMapTypeEnum,
    TwistedTreeline: 'TWISTED_TREELINE' as TournamentV4TournamentCodeParametersMapTypeEnum,
    HowlingAbyss: 'HOWLING_ABYSS' as TournamentV4TournamentCodeParametersMapTypeEnum
};
/**
 * @export
 * @enum {string}
 */
export type TournamentV4TournamentCodeParametersSpectatorTypeEnum = 'NONE' | 'LOBBYONLY' | 'ALL'

/**
 * @export
 * @enum {string}
 */
export const TournamentV4TournamentCodeParametersSpectatorTypeEnum = {
    None: 'NONE' as TournamentV4TournamentCodeParametersSpectatorTypeEnum,
    Lobbyonly: 'LOBBYONLY' as TournamentV4TournamentCodeParametersSpectatorTypeEnum,
    All: 'ALL' as TournamentV4TournamentCodeParametersSpectatorTypeEnum
};



