/* tslint:disable */
/* eslint-disable */
/**
 * Riot API
 *  OpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily. ## OpenAPI Spec File The following versions of the Riot API spec file are available: - `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json)) - `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json)) - `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml)) - `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml)) - `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json)) - `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json)) - `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml)) - `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml)) ## Other Files - Missing DTOs: [`missing.json`](../missing.json) - [Enum Files](../enums/) ## Source Code Source code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome! ## Automatically Generated Rebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily. *** 
 *
 * The version of the OpenAPI document: f14f3a4b603d31d9d2090720bd518853c6a65bbb
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { MatchV4TeamBansDto } from './match-v4-team-bans-dto';

/**
 * 
 * @export
 * @interface MatchV4TeamStatsDto
 */
export interface MatchV4TeamStatsDto {
    /**
     * Number of towers the team destroyed.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    towerKills: number;
    /**
     * Number of times the team killed Rift Herald.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    riftHeraldKills: number;
    /**
     * Flag indicating whether or not the team scored the first blood.
     * @type {boolean}
     * @memberof MatchV4TeamStatsDto
     */
    firstBlood: boolean;
    /**
     * Number of inhibitors the team destroyed.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    inhibitorKills: number;
    /**
     * If match queueId has a draft, contains banned champion data, otherwise empty.
     * @type {Array<MatchV4TeamBansDto>}
     * @memberof MatchV4TeamStatsDto
     */
    bans: Array<MatchV4TeamBansDto>;
    /**
     * Flag indicating whether or not the team scored the first Baron kill.
     * @type {boolean}
     * @memberof MatchV4TeamStatsDto
     */
    firstBaron: boolean;
    /**
     * Flag indicating whether or not the team scored the first Dragon kill.
     * @type {boolean}
     * @memberof MatchV4TeamStatsDto
     */
    firstDragon: boolean;
    /**
     * For Dominion matches, specifies the points the team had at game end.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    dominionVictoryScore: number;
    /**
     * Number of times the team killed Dragon.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    dragonKills: number;
    /**
     * Number of times the team killed Baron.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    baronKills: number;
    /**
     * Flag indicating whether or not the team destroyed the first inhibitor.
     * @type {boolean}
     * @memberof MatchV4TeamStatsDto
     */
    firstInhibitor: boolean;
    /**
     * Flag indicating whether or not the team destroyed the first tower.
     * @type {boolean}
     * @memberof MatchV4TeamStatsDto
     */
    firstTower: boolean;
    /**
     * Number of times the team killed Vilemaw.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    vilemawKills: number;
    /**
     * Flag indicating whether or not the team scored the first Rift Herald kill.
     * @type {boolean}
     * @memberof MatchV4TeamStatsDto
     */
    firstRiftHerald: boolean;
    /**
     * 100 for blue side. 200 for red side.
     * @type {number}
     * @memberof MatchV4TeamStatsDto
     */
    teamId: number;
    /**
     * String indicating whether or not the team won. There are only two values visibile in public match history.              (Legal values:  Fail,  Win)
     * @type {string}
     * @memberof MatchV4TeamStatsDto
     */
    win?: MatchV4TeamStatsDtoWinEnum;
}

/**
 * @export
 * @enum {string}
 */
export type MatchV4TeamStatsDtoWinEnum = 'Fail' | 'Win'

/**
 * @export
 * @enum {string}
 */
export const MatchV4TeamStatsDtoWinEnum = {
    Fail: 'Fail' as MatchV4TeamStatsDtoWinEnum,
    Win: 'Win' as MatchV4TeamStatsDtoWinEnum
};



